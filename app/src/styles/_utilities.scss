// Borders

.border {
  border: 1px solid var(--border-color);
}

.border-0 {
  border: none;
}

@each $direction in (top, right, bottom, left) {
  .border-#{$direction} {
    border-#{$direction}: 1px solid var(--border-color);
  }
}

.rounded {
  border-radius: 0.4rem;
}

.outline-none {
  outline: 0;
}

// Colors

.text-color-default {
  color: var(--text-color);
}

.text-color-highlight {
  color: var(--text-color-highlight);
}

.text-color-danger {
  color: var(--text-color-danger);
}

.text-color-success {
  color: var(--text-color-success);
}

.bg-color-inherit {
  background-color: inherit;
}

.bg-color-default {
  background-color: var(--background-color);
}

.bg-color-panel {
  background-color: var(--background-color-panel);
}

.bg-color-dim {
  background-color: var(--background-color-dim);
}

.event\:bg-color-dim {
  &:focus,
  &:hover,
  &:active {
    background-color: var(--background-color-dim);
  }
}

// Effects

.backdrop {
  backdrop-filter: blur(5px);
  background-color: var(--backdrop-color);
}

.background-overlay {
  --text-color: var(--background-overlay-text-color);
  --text-color-highlight: var(--background-overlay-highlight-color);

  background-color: var(--background-overlay-color);
}

// Misc

.object-fit-cover {
  object-fit: cover;
}

.pointer-events-none {
  pointer-events: none;
}

.transform-center {
  top: 50%;
  transform: translateY(-50%);
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

// Conditional visibility

.visibility-trigger {
  .visibility-target {
    visibility: hidden;

    &:active,
    &:focus {
      visibility: visible;
    }
  }
}

.visibility-trigger:hover {
  .visibility-target {
    visibility: visible;
  }
}
