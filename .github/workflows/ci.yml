name: Continuous Integration

on:
  push:
    branches:
      - master
      - main
      - develop
  pull_request:

jobs:
  # app module
  app:
    runs-on: ubuntu-latest
    name: app-node-${{ matrix.node }}
    strategy:
      matrix:
        node: [ 14, 16 ]
      fail-fast: true
    defaults:
      run:
        working-directory: ./app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Setup yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: yarn install --pure-lockfile --prefer-offline

      - name: Validate
        run: yarn ci

      - name: Build
        run: yarn build

  # server module
  server:
    runs-on: ubuntu-latest
    name: server-node-${{ matrix.node }}
    strategy:
      matrix:
        node: [ 14, 16 ]
      fail-fast: true
    defaults:
      run:
        working-directory: ./server

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Setup yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: yarn install --pure-lockfile --prefer-offline

      - name: Validate
        run: yarn ci

  # docs module
  docs:
    runs-on: ubuntu-latest
    name: docs-node-${{ matrix.node }}
    strategy:
      matrix:
        node: [ 12 ]
      fail-fast: true
    defaults:
      run:
        working-directory: ./docs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Setup yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: yarn install --pure-lockfile --prefer-offline

      - name: Build
        run: yarn build
